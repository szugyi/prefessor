apply plugin: 'kotlin-platform-js'
apply plugin: 'com.moowork.node'

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlin_version"
    expectedBy project(":prefessor-common")
    testCompile "org.jetbrains.kotlin:kotlin-test-js:$kotlin_version"
}

[compileKotlin2Js, compileTestKotlin2Js].each {
    it.configure {
        kotlinOptions {
            metaInfo = true
            sourceMap = true
            sourceMapEmbedSources = "always"
            moduleKind = 'commonjs'
        }
    }

    it.dependsOn npmInstall
}

task populateNodeModules(type: Copy, dependsOn: compileKotlin2Js) {
    from compileKotlin2Js.destinationDir

    configurations.testCompile.each {
        from zipTree(it.absolutePath).matching { include '*.js' }
    }

    into "${buildDir}/node_modules"
}

node {
    version = node_version
    download = true
}

task runMocha(type: NodeTask, dependsOn: [compileTestKotlin2Js, populateNodeModules]) {
    group = LifecycleBasePlugin.VERIFICATION_GROUP
    script = file('node_modules/mocha/bin/mocha')
    args = [compileTestKotlin2Js.outputFile]
}

// test.dependsOn runMocha

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.kotlin
}

artifacts {
    archives sourcesJar
}